package com.example.aadharscanner.database;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SHG_MEMBER_REGISTRATION_SYNC_DATA".
*/
public class ShgMemberRegistrationSyncDataDao extends AbstractDao<ShgMemberRegistrationSyncData, Long> {

    public static final String TABLENAME = "SHG_MEMBER_REGISTRATION_SYNC_DATA";

    /**
     * Properties of entity ShgMemberRegistrationSyncData.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property AutoIncrement = new Property(0, Long.class, "autoIncrement", true, "_id");
        public final static Property AadharNumber = new Property(1, String.class, "aadharNumber", false, "AADHAR_NUMBER");
        public final static Property Blockcode = new Property(2, String.class, "blockcode", false, "BLOCKCODE");
        public final static Property ScanStatus = new Property(3, String.class, "scanStatus", false, "SCAN_STATUS");
        public final static Property Gpcode = new Property(4, String.class, "gpcode", false, "GPCODE");
        public final static Property Villagecode = new Property(5, String.class, "villagecode", false, "VILLAGECODE");
        public final static Property Shgcode = new Property(6, String.class, "shgcode", false, "SHGCODE");
        public final static Property ShgMemberuniqueCode = new Property(7, String.class, "shgMemberuniqueCode", false, "SHG_MEMBERUNIQUE_CODE");
        public final static Property MemberName = new Property(8, String.class, "memberName", false, "MEMBER_NAME");
        public final static Property MemberGender = new Property(9, String.class, "memberGender", false, "MEMBER_GENDER");
        public final static Property MemberFathername = new Property(10, String.class, "memberFathername", false, "MEMBER_FATHERNAME");
        public final static Property MemberAddress = new Property(11, String.class, "memberAddress", false, "MEMBER_ADDRESS");
        public final static Property MemberYOB = new Property(12, String.class, "memberYOB", false, "MEMBER_YOB");
        public final static Property MembermobileNumber = new Property(13, String.class, "membermobileNumber", false, "MEMBERMOBILE_NUMBER");
        public final static Property MemberDOB = new Property(14, String.class, "memberDOB", false, "MEMBER_DOB");
        public final static Property SocialCatagory = new Property(15, String.class, "socialCatagory", false, "SOCIAL_CATAGORY");
        public final static Property Disablity = new Property(16, String.class, "disablity", false, "DISABLITY");
        public final static Property Religion = new Property(17, String.class, "religion", false, "RELIGION");
        public final static Property PipCatagory = new Property(18, String.class, "pipCatagory", false, "PIP_CATAGORY");
        public final static Property Leader = new Property(19, String.class, "leader", false, "LEADER");
        public final static Property EducationStandard = new Property(20, String.class, "educationStandard", false, "EDUCATION_STANDARD");
        public final static Property MamberDateOfJoining = new Property(21, String.class, "mamberDateOfJoining", false, "MAMBER_DATE_OF_JOINING");
        public final static Property BankName = new Property(22, String.class, "bankName", false, "BANK_NAME");
        public final static Property BankBranch = new Property(23, String.class, "bankBranch", false, "BANK_BRANCH");
        public final static Property BankBranchCode = new Property(24, String.class, "bankBranchCode", false, "BANK_BRANCH_CODE");
        public final static Property BankNameCode = new Property(25, String.class, "bankNameCode", false, "BANK_NAME_CODE");
        public final static Property IfscCode = new Property(26, String.class, "ifscCode", false, "IFSC_CODE");
        public final static Property AccountNumber = new Property(27, String.class, "accountNumber", false, "ACCOUNT_NUMBER");
        public final static Property AadharSeededAccount = new Property(28, String.class, "aadharSeededAccount", false, "AADHAR_SEEDED_ACCOUNT");
        public final static Property Pmjjy = new Property(29, String.class, "pmjjy", false, "PMJJY");
        public final static Property Pmsby = new Property(30, String.class, "pmsby", false, "PMSBY");
        public final static Property LifeInsurance = new Property(31, String.class, "lifeInsurance", false, "LIFE_INSURANCE");
        public final static Property PensionScheme = new Property(32, String.class, "pensionScheme", false, "PENSION_SCHEME");
        public final static Property IsShopKeeper = new Property(33, String.class, "isShopKeeper", false, "IS_SHOP_KEEPER");
        public final static Property SeccNo = new Property(34, String.class, "seccNo", false, "SECC_NO");
        public final static Property OtherEducation = new Property(35, String.class, "otherEducation", false, "OTHER_EDUCATION");
        public final static Property SyncStatus = new Property(36, String.class, "syncStatus", false, "SYNC_STATUS");
        public final static Property PvgtStatus = new Property(37, String.class, "pvgtStatus", false, "PVGT_STATUS");
        public final static Property PostalCode = new Property(38, String.class, "postalCode", false, "POSTAL_CODE");
        public final static Property MemberPhoto = new Property(39, byte[].class, "memberPhoto", false, "MEMBER_PHOTO");
        public final static Property PassbookPhoto = new Property(40, byte[].class, "passbookPhoto", false, "PASSBOOK_PHOTO");
        public final static Property ConcentForm = new Property(41, byte[].class, "concentForm", false, "CONCENT_FORM");
    }


    public ShgMemberRegistrationSyncDataDao(DaoConfig config) {
        super(config);
    }
    
    public ShgMemberRegistrationSyncDataDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SHG_MEMBER_REGISTRATION_SYNC_DATA\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: autoIncrement
                "\"AADHAR_NUMBER\" TEXT," + // 1: aadharNumber
                "\"BLOCKCODE\" TEXT," + // 2: blockcode
                "\"SCAN_STATUS\" TEXT," + // 3: scanStatus
                "\"GPCODE\" TEXT," + // 4: gpcode
                "\"VILLAGECODE\" TEXT," + // 5: villagecode
                "\"SHGCODE\" TEXT," + // 6: shgcode
                "\"SHG_MEMBERUNIQUE_CODE\" TEXT," + // 7: shgMemberuniqueCode
                "\"MEMBER_NAME\" TEXT," + // 8: memberName
                "\"MEMBER_GENDER\" TEXT," + // 9: memberGender
                "\"MEMBER_FATHERNAME\" TEXT," + // 10: memberFathername
                "\"MEMBER_ADDRESS\" TEXT," + // 11: memberAddress
                "\"MEMBER_YOB\" TEXT," + // 12: memberYOB
                "\"MEMBERMOBILE_NUMBER\" TEXT," + // 13: membermobileNumber
                "\"MEMBER_DOB\" TEXT," + // 14: memberDOB
                "\"SOCIAL_CATAGORY\" TEXT," + // 15: socialCatagory
                "\"DISABLITY\" TEXT," + // 16: disablity
                "\"RELIGION\" TEXT," + // 17: religion
                "\"PIP_CATAGORY\" TEXT," + // 18: pipCatagory
                "\"LEADER\" TEXT," + // 19: leader
                "\"EDUCATION_STANDARD\" TEXT," + // 20: educationStandard
                "\"MAMBER_DATE_OF_JOINING\" TEXT," + // 21: mamberDateOfJoining
                "\"BANK_NAME\" TEXT," + // 22: bankName
                "\"BANK_BRANCH\" TEXT," + // 23: bankBranch
                "\"BANK_BRANCH_CODE\" TEXT," + // 24: bankBranchCode
                "\"BANK_NAME_CODE\" TEXT," + // 25: bankNameCode
                "\"IFSC_CODE\" TEXT," + // 26: ifscCode
                "\"ACCOUNT_NUMBER\" TEXT," + // 27: accountNumber
                "\"AADHAR_SEEDED_ACCOUNT\" TEXT," + // 28: aadharSeededAccount
                "\"PMJJY\" TEXT," + // 29: pmjjy
                "\"PMSBY\" TEXT," + // 30: pmsby
                "\"LIFE_INSURANCE\" TEXT," + // 31: lifeInsurance
                "\"PENSION_SCHEME\" TEXT," + // 32: pensionScheme
                "\"IS_SHOP_KEEPER\" TEXT," + // 33: isShopKeeper
                "\"SECC_NO\" TEXT," + // 34: seccNo
                "\"OTHER_EDUCATION\" TEXT," + // 35: otherEducation
                "\"SYNC_STATUS\" TEXT," + // 36: syncStatus
                "\"PVGT_STATUS\" TEXT," + // 37: pvgtStatus
                "\"POSTAL_CODE\" TEXT," + // 38: postalCode
                "\"MEMBER_PHOTO\" BLOB," + // 39: memberPhoto
                "\"PASSBOOK_PHOTO\" BLOB," + // 40: passbookPhoto
                "\"CONCENT_FORM\" BLOB);"); // 41: concentForm
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SHG_MEMBER_REGISTRATION_SYNC_DATA\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ShgMemberRegistrationSyncData entity) {
        stmt.clearBindings();
 
        Long autoIncrement = entity.getAutoIncrement();
        if (autoIncrement != null) {
            stmt.bindLong(1, autoIncrement);
        }
 
        String aadharNumber = entity.getAadharNumber();
        if (aadharNumber != null) {
            stmt.bindString(2, aadharNumber);
        }
 
        String blockcode = entity.getBlockcode();
        if (blockcode != null) {
            stmt.bindString(3, blockcode);
        }
 
        String scanStatus = entity.getScanStatus();
        if (scanStatus != null) {
            stmt.bindString(4, scanStatus);
        }
 
        String gpcode = entity.getGpcode();
        if (gpcode != null) {
            stmt.bindString(5, gpcode);
        }
 
        String villagecode = entity.getVillagecode();
        if (villagecode != null) {
            stmt.bindString(6, villagecode);
        }
 
        String shgcode = entity.getShgcode();
        if (shgcode != null) {
            stmt.bindString(7, shgcode);
        }
 
        String shgMemberuniqueCode = entity.getShgMemberuniqueCode();
        if (shgMemberuniqueCode != null) {
            stmt.bindString(8, shgMemberuniqueCode);
        }
 
        String memberName = entity.getMemberName();
        if (memberName != null) {
            stmt.bindString(9, memberName);
        }
 
        String memberGender = entity.getMemberGender();
        if (memberGender != null) {
            stmt.bindString(10, memberGender);
        }
 
        String memberFathername = entity.getMemberFathername();
        if (memberFathername != null) {
            stmt.bindString(11, memberFathername);
        }
 
        String memberAddress = entity.getMemberAddress();
        if (memberAddress != null) {
            stmt.bindString(12, memberAddress);
        }
 
        String memberYOB = entity.getMemberYOB();
        if (memberYOB != null) {
            stmt.bindString(13, memberYOB);
        }
 
        String membermobileNumber = entity.getMembermobileNumber();
        if (membermobileNumber != null) {
            stmt.bindString(14, membermobileNumber);
        }
 
        String memberDOB = entity.getMemberDOB();
        if (memberDOB != null) {
            stmt.bindString(15, memberDOB);
        }
 
        String socialCatagory = entity.getSocialCatagory();
        if (socialCatagory != null) {
            stmt.bindString(16, socialCatagory);
        }
 
        String disablity = entity.getDisablity();
        if (disablity != null) {
            stmt.bindString(17, disablity);
        }
 
        String religion = entity.getReligion();
        if (religion != null) {
            stmt.bindString(18, religion);
        }
 
        String pipCatagory = entity.getPipCatagory();
        if (pipCatagory != null) {
            stmt.bindString(19, pipCatagory);
        }
 
        String leader = entity.getLeader();
        if (leader != null) {
            stmt.bindString(20, leader);
        }
 
        String educationStandard = entity.getEducationStandard();
        if (educationStandard != null) {
            stmt.bindString(21, educationStandard);
        }
 
        String mamberDateOfJoining = entity.getMamberDateOfJoining();
        if (mamberDateOfJoining != null) {
            stmt.bindString(22, mamberDateOfJoining);
        }
 
        String bankName = entity.getBankName();
        if (bankName != null) {
            stmt.bindString(23, bankName);
        }
 
        String bankBranch = entity.getBankBranch();
        if (bankBranch != null) {
            stmt.bindString(24, bankBranch);
        }
 
        String bankBranchCode = entity.getBankBranchCode();
        if (bankBranchCode != null) {
            stmt.bindString(25, bankBranchCode);
        }
 
        String bankNameCode = entity.getBankNameCode();
        if (bankNameCode != null) {
            stmt.bindString(26, bankNameCode);
        }
 
        String ifscCode = entity.getIfscCode();
        if (ifscCode != null) {
            stmt.bindString(27, ifscCode);
        }
 
        String accountNumber = entity.getAccountNumber();
        if (accountNumber != null) {
            stmt.bindString(28, accountNumber);
        }
 
        String aadharSeededAccount = entity.getAadharSeededAccount();
        if (aadharSeededAccount != null) {
            stmt.bindString(29, aadharSeededAccount);
        }
 
        String pmjjy = entity.getPmjjy();
        if (pmjjy != null) {
            stmt.bindString(30, pmjjy);
        }
 
        String pmsby = entity.getPmsby();
        if (pmsby != null) {
            stmt.bindString(31, pmsby);
        }
 
        String lifeInsurance = entity.getLifeInsurance();
        if (lifeInsurance != null) {
            stmt.bindString(32, lifeInsurance);
        }
 
        String pensionScheme = entity.getPensionScheme();
        if (pensionScheme != null) {
            stmt.bindString(33, pensionScheme);
        }
 
        String isShopKeeper = entity.getIsShopKeeper();
        if (isShopKeeper != null) {
            stmt.bindString(34, isShopKeeper);
        }
 
        String seccNo = entity.getSeccNo();
        if (seccNo != null) {
            stmt.bindString(35, seccNo);
        }
 
        String otherEducation = entity.getOtherEducation();
        if (otherEducation != null) {
            stmt.bindString(36, otherEducation);
        }
 
        String syncStatus = entity.getSyncStatus();
        if (syncStatus != null) {
            stmt.bindString(37, syncStatus);
        }
 
        String pvgtStatus = entity.getPvgtStatus();
        if (pvgtStatus != null) {
            stmt.bindString(38, pvgtStatus);
        }
 
        String postalCode = entity.getPostalCode();
        if (postalCode != null) {
            stmt.bindString(39, postalCode);
        }
 
        byte[] memberPhoto = entity.getMemberPhoto();
        if (memberPhoto != null) {
            stmt.bindBlob(40, memberPhoto);
        }
 
        byte[] passbookPhoto = entity.getPassbookPhoto();
        if (passbookPhoto != null) {
            stmt.bindBlob(41, passbookPhoto);
        }
 
        byte[] concentForm = entity.getConcentForm();
        if (concentForm != null) {
            stmt.bindBlob(42, concentForm);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ShgMemberRegistrationSyncData entity) {
        stmt.clearBindings();
 
        Long autoIncrement = entity.getAutoIncrement();
        if (autoIncrement != null) {
            stmt.bindLong(1, autoIncrement);
        }
 
        String aadharNumber = entity.getAadharNumber();
        if (aadharNumber != null) {
            stmt.bindString(2, aadharNumber);
        }
 
        String blockcode = entity.getBlockcode();
        if (blockcode != null) {
            stmt.bindString(3, blockcode);
        }
 
        String scanStatus = entity.getScanStatus();
        if (scanStatus != null) {
            stmt.bindString(4, scanStatus);
        }
 
        String gpcode = entity.getGpcode();
        if (gpcode != null) {
            stmt.bindString(5, gpcode);
        }
 
        String villagecode = entity.getVillagecode();
        if (villagecode != null) {
            stmt.bindString(6, villagecode);
        }
 
        String shgcode = entity.getShgcode();
        if (shgcode != null) {
            stmt.bindString(7, shgcode);
        }
 
        String shgMemberuniqueCode = entity.getShgMemberuniqueCode();
        if (shgMemberuniqueCode != null) {
            stmt.bindString(8, shgMemberuniqueCode);
        }
 
        String memberName = entity.getMemberName();
        if (memberName != null) {
            stmt.bindString(9, memberName);
        }
 
        String memberGender = entity.getMemberGender();
        if (memberGender != null) {
            stmt.bindString(10, memberGender);
        }
 
        String memberFathername = entity.getMemberFathername();
        if (memberFathername != null) {
            stmt.bindString(11, memberFathername);
        }
 
        String memberAddress = entity.getMemberAddress();
        if (memberAddress != null) {
            stmt.bindString(12, memberAddress);
        }
 
        String memberYOB = entity.getMemberYOB();
        if (memberYOB != null) {
            stmt.bindString(13, memberYOB);
        }
 
        String membermobileNumber = entity.getMembermobileNumber();
        if (membermobileNumber != null) {
            stmt.bindString(14, membermobileNumber);
        }
 
        String memberDOB = entity.getMemberDOB();
        if (memberDOB != null) {
            stmt.bindString(15, memberDOB);
        }
 
        String socialCatagory = entity.getSocialCatagory();
        if (socialCatagory != null) {
            stmt.bindString(16, socialCatagory);
        }
 
        String disablity = entity.getDisablity();
        if (disablity != null) {
            stmt.bindString(17, disablity);
        }
 
        String religion = entity.getReligion();
        if (religion != null) {
            stmt.bindString(18, religion);
        }
 
        String pipCatagory = entity.getPipCatagory();
        if (pipCatagory != null) {
            stmt.bindString(19, pipCatagory);
        }
 
        String leader = entity.getLeader();
        if (leader != null) {
            stmt.bindString(20, leader);
        }
 
        String educationStandard = entity.getEducationStandard();
        if (educationStandard != null) {
            stmt.bindString(21, educationStandard);
        }
 
        String mamberDateOfJoining = entity.getMamberDateOfJoining();
        if (mamberDateOfJoining != null) {
            stmt.bindString(22, mamberDateOfJoining);
        }
 
        String bankName = entity.getBankName();
        if (bankName != null) {
            stmt.bindString(23, bankName);
        }
 
        String bankBranch = entity.getBankBranch();
        if (bankBranch != null) {
            stmt.bindString(24, bankBranch);
        }
 
        String bankBranchCode = entity.getBankBranchCode();
        if (bankBranchCode != null) {
            stmt.bindString(25, bankBranchCode);
        }
 
        String bankNameCode = entity.getBankNameCode();
        if (bankNameCode != null) {
            stmt.bindString(26, bankNameCode);
        }
 
        String ifscCode = entity.getIfscCode();
        if (ifscCode != null) {
            stmt.bindString(27, ifscCode);
        }
 
        String accountNumber = entity.getAccountNumber();
        if (accountNumber != null) {
            stmt.bindString(28, accountNumber);
        }
 
        String aadharSeededAccount = entity.getAadharSeededAccount();
        if (aadharSeededAccount != null) {
            stmt.bindString(29, aadharSeededAccount);
        }
 
        String pmjjy = entity.getPmjjy();
        if (pmjjy != null) {
            stmt.bindString(30, pmjjy);
        }
 
        String pmsby = entity.getPmsby();
        if (pmsby != null) {
            stmt.bindString(31, pmsby);
        }
 
        String lifeInsurance = entity.getLifeInsurance();
        if (lifeInsurance != null) {
            stmt.bindString(32, lifeInsurance);
        }
 
        String pensionScheme = entity.getPensionScheme();
        if (pensionScheme != null) {
            stmt.bindString(33, pensionScheme);
        }
 
        String isShopKeeper = entity.getIsShopKeeper();
        if (isShopKeeper != null) {
            stmt.bindString(34, isShopKeeper);
        }
 
        String seccNo = entity.getSeccNo();
        if (seccNo != null) {
            stmt.bindString(35, seccNo);
        }
 
        String otherEducation = entity.getOtherEducation();
        if (otherEducation != null) {
            stmt.bindString(36, otherEducation);
        }
 
        String syncStatus = entity.getSyncStatus();
        if (syncStatus != null) {
            stmt.bindString(37, syncStatus);
        }
 
        String pvgtStatus = entity.getPvgtStatus();
        if (pvgtStatus != null) {
            stmt.bindString(38, pvgtStatus);
        }
 
        String postalCode = entity.getPostalCode();
        if (postalCode != null) {
            stmt.bindString(39, postalCode);
        }
 
        byte[] memberPhoto = entity.getMemberPhoto();
        if (memberPhoto != null) {
            stmt.bindBlob(40, memberPhoto);
        }
 
        byte[] passbookPhoto = entity.getPassbookPhoto();
        if (passbookPhoto != null) {
            stmt.bindBlob(41, passbookPhoto);
        }
 
        byte[] concentForm = entity.getConcentForm();
        if (concentForm != null) {
            stmt.bindBlob(42, concentForm);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public ShgMemberRegistrationSyncData readEntity(Cursor cursor, int offset) {
        ShgMemberRegistrationSyncData entity = new ShgMemberRegistrationSyncData( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // autoIncrement
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // aadharNumber
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // blockcode
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // scanStatus
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // gpcode
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // villagecode
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // shgcode
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // shgMemberuniqueCode
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // memberName
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // memberGender
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // memberFathername
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // memberAddress
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // memberYOB
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // membermobileNumber
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // memberDOB
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // socialCatagory
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // disablity
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // religion
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // pipCatagory
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // leader
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // educationStandard
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // mamberDateOfJoining
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // bankName
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // bankBranch
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // bankBranchCode
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // bankNameCode
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // ifscCode
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // accountNumber
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // aadharSeededAccount
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // pmjjy
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // pmsby
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // lifeInsurance
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // pensionScheme
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // isShopKeeper
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // seccNo
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // otherEducation
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // syncStatus
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // pvgtStatus
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // postalCode
            cursor.isNull(offset + 39) ? null : cursor.getBlob(offset + 39), // memberPhoto
            cursor.isNull(offset + 40) ? null : cursor.getBlob(offset + 40), // passbookPhoto
            cursor.isNull(offset + 41) ? null : cursor.getBlob(offset + 41) // concentForm
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ShgMemberRegistrationSyncData entity, int offset) {
        entity.setAutoIncrement(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setAadharNumber(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setBlockcode(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setScanStatus(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setGpcode(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setVillagecode(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setShgcode(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setShgMemberuniqueCode(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setMemberName(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setMemberGender(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setMemberFathername(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setMemberAddress(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setMemberYOB(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setMembermobileNumber(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setMemberDOB(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setSocialCatagory(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setDisablity(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setReligion(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setPipCatagory(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setLeader(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setEducationStandard(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setMamberDateOfJoining(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setBankName(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setBankBranch(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setBankBranchCode(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setBankNameCode(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setIfscCode(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setAccountNumber(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setAadharSeededAccount(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setPmjjy(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setPmsby(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setLifeInsurance(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setPensionScheme(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setIsShopKeeper(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setSeccNo(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setOtherEducation(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setSyncStatus(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setPvgtStatus(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setPostalCode(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setMemberPhoto(cursor.isNull(offset + 39) ? null : cursor.getBlob(offset + 39));
        entity.setPassbookPhoto(cursor.isNull(offset + 40) ? null : cursor.getBlob(offset + 40));
        entity.setConcentForm(cursor.isNull(offset + 41) ? null : cursor.getBlob(offset + 41));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(ShgMemberRegistrationSyncData entity, long rowId) {
        entity.setAutoIncrement(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(ShgMemberRegistrationSyncData entity) {
        if(entity != null) {
            return entity.getAutoIncrement();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(ShgMemberRegistrationSyncData entity) {
        return entity.getAutoIncrement() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
