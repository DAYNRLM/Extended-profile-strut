package com.example.aadharscanner.database;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SHG_MEMBER_DETAILS_DATA".
*/
public class ShgMemberDetailsDataDao extends AbstractDao<ShgMemberDetailsData, Long> {

    public static final String TABLENAME = "SHG_MEMBER_DETAILS_DATA";

    /**
     * Properties of entity ShgMemberDetailsData.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property VillageCode = new Property(1, String.class, "villageCode", false, "VILLAGE_CODE");
        public final static Property ShgCode = new Property(2, String.class, "shgCode", false, "SHG_CODE");
        public final static Property ShgMemberCode = new Property(3, String.class, "shgMemberCode", false, "SHG_MEMBER_CODE");
        public final static Property ShgMemberEntityCode = new Property(4, String.class, "shgMemberEntityCode", false, "SHG_MEMBER_ENTITY_CODE");
        public final static Property ShgMemberName = new Property(5, String.class, "shgMemberName", false, "SHG_MEMBER_NAME");
        public final static Property ActiveStatus = new Property(6, String.class, "activeStatus", false, "ACTIVE_STATUS");
        public final static Property ShgMemberAadharStatus = new Property(7, String.class, "shgMemberAadharStatus", false, "SHG_MEMBER_AADHAR_STATUS");
        public final static Property SggMemberAccountStatus = new Property(8, String.class, "sggMemberAccountStatus", false, "SGG_MEMBER_ACCOUNT_STATUS");
        public final static Property KycStatus = new Property(9, String.class, "kycStatus", false, "KYC_STATUS");
        public final static Property MemberCurrentStatus = new Property(10, String.class, "memberCurrentStatus", false, "MEMBER_CURRENT_STATUS");
        public final static Property SyncStatus = new Property(11, String.class, "syncStatus", false, "SYNC_STATUS");
        public final static Property MemAadharCurrentStatus = new Property(12, String.class, "memAadharCurrentStatus", false, "MEM_AADHAR_CURRENT_STATUS");
        public final static Property MemBankAccCurrentStatus = new Property(13, String.class, "memBankAccCurrentStatus", false, "MEM_BANK_ACC_CURRENT_STATUS");
        public final static Property Belonging_name = new Property(14, String.class, "belonging_name", false, "BELONGING_NAME");
        public final static Property Dob = new Property(15, String.class, "dob", false, "DOB");
        public final static Property Gender = new Property(16, String.class, "gender", false, "GENDER");
        public final static Property KycDocId = new Property(17, String.class, "kycDocId", false, "KYC_DOC_ID");
        public final static Property Leadership = new Property(18, String.class, "leadership", false, "LEADERSHIP");
        public final static Property UpdateMemberCurrentStatus = new Property(19, String.class, "updateMemberCurrentStatus", false, "UPDATE_MEMBER_CURRENT_STATUS");
    }


    public ShgMemberDetailsDataDao(DaoConfig config) {
        super(config);
    }
    
    public ShgMemberDetailsDataDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SHG_MEMBER_DETAILS_DATA\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"VILLAGE_CODE\" TEXT," + // 1: villageCode
                "\"SHG_CODE\" TEXT," + // 2: shgCode
                "\"SHG_MEMBER_CODE\" TEXT," + // 3: shgMemberCode
                "\"SHG_MEMBER_ENTITY_CODE\" TEXT," + // 4: shgMemberEntityCode
                "\"SHG_MEMBER_NAME\" TEXT," + // 5: shgMemberName
                "\"ACTIVE_STATUS\" TEXT," + // 6: activeStatus
                "\"SHG_MEMBER_AADHAR_STATUS\" TEXT," + // 7: shgMemberAadharStatus
                "\"SGG_MEMBER_ACCOUNT_STATUS\" TEXT," + // 8: sggMemberAccountStatus
                "\"KYC_STATUS\" TEXT," + // 9: kycStatus
                "\"MEMBER_CURRENT_STATUS\" TEXT," + // 10: memberCurrentStatus
                "\"SYNC_STATUS\" TEXT," + // 11: syncStatus
                "\"MEM_AADHAR_CURRENT_STATUS\" TEXT," + // 12: memAadharCurrentStatus
                "\"MEM_BANK_ACC_CURRENT_STATUS\" TEXT," + // 13: memBankAccCurrentStatus
                "\"BELONGING_NAME\" TEXT," + // 14: belonging_name
                "\"DOB\" TEXT," + // 15: dob
                "\"GENDER\" TEXT," + // 16: gender
                "\"KYC_DOC_ID\" TEXT," + // 17: kycDocId
                "\"LEADERSHIP\" TEXT," + // 18: leadership
                "\"UPDATE_MEMBER_CURRENT_STATUS\" TEXT);"); // 19: updateMemberCurrentStatus
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SHG_MEMBER_DETAILS_DATA\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ShgMemberDetailsData entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String villageCode = entity.getVillageCode();
        if (villageCode != null) {
            stmt.bindString(2, villageCode);
        }
 
        String shgCode = entity.getShgCode();
        if (shgCode != null) {
            stmt.bindString(3, shgCode);
        }
 
        String shgMemberCode = entity.getShgMemberCode();
        if (shgMemberCode != null) {
            stmt.bindString(4, shgMemberCode);
        }
 
        String shgMemberEntityCode = entity.getShgMemberEntityCode();
        if (shgMemberEntityCode != null) {
            stmt.bindString(5, shgMemberEntityCode);
        }
 
        String shgMemberName = entity.getShgMemberName();
        if (shgMemberName != null) {
            stmt.bindString(6, shgMemberName);
        }
 
        String activeStatus = entity.getActiveStatus();
        if (activeStatus != null) {
            stmt.bindString(7, activeStatus);
        }
 
        String shgMemberAadharStatus = entity.getShgMemberAadharStatus();
        if (shgMemberAadharStatus != null) {
            stmt.bindString(8, shgMemberAadharStatus);
        }
 
        String sggMemberAccountStatus = entity.getSggMemberAccountStatus();
        if (sggMemberAccountStatus != null) {
            stmt.bindString(9, sggMemberAccountStatus);
        }
 
        String kycStatus = entity.getKycStatus();
        if (kycStatus != null) {
            stmt.bindString(10, kycStatus);
        }
 
        String memberCurrentStatus = entity.getMemberCurrentStatus();
        if (memberCurrentStatus != null) {
            stmt.bindString(11, memberCurrentStatus);
        }
 
        String syncStatus = entity.getSyncStatus();
        if (syncStatus != null) {
            stmt.bindString(12, syncStatus);
        }
 
        String memAadharCurrentStatus = entity.getMemAadharCurrentStatus();
        if (memAadharCurrentStatus != null) {
            stmt.bindString(13, memAadharCurrentStatus);
        }
 
        String memBankAccCurrentStatus = entity.getMemBankAccCurrentStatus();
        if (memBankAccCurrentStatus != null) {
            stmt.bindString(14, memBankAccCurrentStatus);
        }
 
        String belonging_name = entity.getBelonging_name();
        if (belonging_name != null) {
            stmt.bindString(15, belonging_name);
        }
 
        String dob = entity.getDob();
        if (dob != null) {
            stmt.bindString(16, dob);
        }
 
        String gender = entity.getGender();
        if (gender != null) {
            stmt.bindString(17, gender);
        }
 
        String kycDocId = entity.getKycDocId();
        if (kycDocId != null) {
            stmt.bindString(18, kycDocId);
        }
 
        String leadership = entity.getLeadership();
        if (leadership != null) {
            stmt.bindString(19, leadership);
        }
 
        String updateMemberCurrentStatus = entity.getUpdateMemberCurrentStatus();
        if (updateMemberCurrentStatus != null) {
            stmt.bindString(20, updateMemberCurrentStatus);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ShgMemberDetailsData entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String villageCode = entity.getVillageCode();
        if (villageCode != null) {
            stmt.bindString(2, villageCode);
        }
 
        String shgCode = entity.getShgCode();
        if (shgCode != null) {
            stmt.bindString(3, shgCode);
        }
 
        String shgMemberCode = entity.getShgMemberCode();
        if (shgMemberCode != null) {
            stmt.bindString(4, shgMemberCode);
        }
 
        String shgMemberEntityCode = entity.getShgMemberEntityCode();
        if (shgMemberEntityCode != null) {
            stmt.bindString(5, shgMemberEntityCode);
        }
 
        String shgMemberName = entity.getShgMemberName();
        if (shgMemberName != null) {
            stmt.bindString(6, shgMemberName);
        }
 
        String activeStatus = entity.getActiveStatus();
        if (activeStatus != null) {
            stmt.bindString(7, activeStatus);
        }
 
        String shgMemberAadharStatus = entity.getShgMemberAadharStatus();
        if (shgMemberAadharStatus != null) {
            stmt.bindString(8, shgMemberAadharStatus);
        }
 
        String sggMemberAccountStatus = entity.getSggMemberAccountStatus();
        if (sggMemberAccountStatus != null) {
            stmt.bindString(9, sggMemberAccountStatus);
        }
 
        String kycStatus = entity.getKycStatus();
        if (kycStatus != null) {
            stmt.bindString(10, kycStatus);
        }
 
        String memberCurrentStatus = entity.getMemberCurrentStatus();
        if (memberCurrentStatus != null) {
            stmt.bindString(11, memberCurrentStatus);
        }
 
        String syncStatus = entity.getSyncStatus();
        if (syncStatus != null) {
            stmt.bindString(12, syncStatus);
        }
 
        String memAadharCurrentStatus = entity.getMemAadharCurrentStatus();
        if (memAadharCurrentStatus != null) {
            stmt.bindString(13, memAadharCurrentStatus);
        }
 
        String memBankAccCurrentStatus = entity.getMemBankAccCurrentStatus();
        if (memBankAccCurrentStatus != null) {
            stmt.bindString(14, memBankAccCurrentStatus);
        }
 
        String belonging_name = entity.getBelonging_name();
        if (belonging_name != null) {
            stmt.bindString(15, belonging_name);
        }
 
        String dob = entity.getDob();
        if (dob != null) {
            stmt.bindString(16, dob);
        }
 
        String gender = entity.getGender();
        if (gender != null) {
            stmt.bindString(17, gender);
        }
 
        String kycDocId = entity.getKycDocId();
        if (kycDocId != null) {
            stmt.bindString(18, kycDocId);
        }
 
        String leadership = entity.getLeadership();
        if (leadership != null) {
            stmt.bindString(19, leadership);
        }
 
        String updateMemberCurrentStatus = entity.getUpdateMemberCurrentStatus();
        if (updateMemberCurrentStatus != null) {
            stmt.bindString(20, updateMemberCurrentStatus);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public ShgMemberDetailsData readEntity(Cursor cursor, int offset) {
        ShgMemberDetailsData entity = new ShgMemberDetailsData( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // villageCode
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // shgCode
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // shgMemberCode
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // shgMemberEntityCode
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // shgMemberName
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // activeStatus
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // shgMemberAadharStatus
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // sggMemberAccountStatus
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // kycStatus
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // memberCurrentStatus
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // syncStatus
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // memAadharCurrentStatus
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // memBankAccCurrentStatus
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // belonging_name
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // dob
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // gender
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // kycDocId
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // leadership
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19) // updateMemberCurrentStatus
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ShgMemberDetailsData entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setVillageCode(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setShgCode(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setShgMemberCode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setShgMemberEntityCode(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setShgMemberName(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setActiveStatus(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setShgMemberAadharStatus(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setSggMemberAccountStatus(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setKycStatus(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setMemberCurrentStatus(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setSyncStatus(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setMemAadharCurrentStatus(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setMemBankAccCurrentStatus(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setBelonging_name(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setDob(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setGender(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setKycDocId(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setLeadership(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setUpdateMemberCurrentStatus(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(ShgMemberDetailsData entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(ShgMemberDetailsData entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(ShgMemberDetailsData entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
