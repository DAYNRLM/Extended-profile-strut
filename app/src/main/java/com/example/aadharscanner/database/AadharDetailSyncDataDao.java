package com.example.aadharscanner.database;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "AADHAR_DETAIL_SYNC_DATA".
*/
public class AadharDetailSyncDataDao extends AbstractDao<AadharDetailSyncData, Long> {

    public static final String TABLENAME = "AADHAR_DETAIL_SYNC_DATA";

    /**
     * Properties of entity AadharDetailSyncData.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property AutoIncrement = new Property(0, Long.class, "autoIncrement", true, "_id");
        public final static Property VillageCode = new Property(1, String.class, "villageCode", false, "VILLAGE_CODE");
        public final static Property ShgCode = new Property(2, String.class, "shgCode", false, "SHG_CODE");
        public final static Property ShgMemberCode = new Property(3, String.class, "shgMemberCode", false, "SHG_MEMBER_CODE");
        public final static Property AadharNumber = new Property(4, String.class, "aadharNumber", false, "AADHAR_NUMBER");
        public final static Property AadharName = new Property(5, String.class, "aadharName", false, "AADHAR_NAME");
        public final static Property AadharYOB = new Property(6, String.class, "aadharYOB", false, "AADHAR_YOB");
        public final static Property AadharGender = new Property(7, String.class, "aadharGender", false, "AADHAR_GENDER");
        public final static Property AadharAddress = new Property(8, String.class, "aadharAddress", false, "AADHAR_ADDRESS");
        public final static Property PostalCode = new Property(9, String.class, "postalCode", false, "POSTAL_CODE");
        public final static Property AadharSyncStatus = new Property(10, String.class, "aadharSyncStatus", false, "AADHAR_SYNC_STATUS");
        public final static Property AadharFatherName = new Property(11, String.class, "aadharFatherName", false, "AADHAR_FATHER_NAME");
        public final static Property AadhaarMobileNumber = new Property(12, String.class, "aadhaarMobileNumber", false, "AADHAAR_MOBILE_NUMBER");
        public final static Property LatLong = new Property(13, String.class, "latLong", false, "LAT_LONG");
        public final static Property ScanStatus = new Property(14, String.class, "scanStatus", false, "SCAN_STATUS");
        public final static Property AadhaarImage = new Property(15, byte[].class, "aadhaarImage", false, "AADHAAR_IMAGE");
        public final static Property ConcentForm = new Property(16, byte[].class, "concentForm", false, "CONCENT_FORM");
    }


    public AadharDetailSyncDataDao(DaoConfig config) {
        super(config);
    }
    
    public AadharDetailSyncDataDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"AADHAR_DETAIL_SYNC_DATA\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: autoIncrement
                "\"VILLAGE_CODE\" TEXT," + // 1: villageCode
                "\"SHG_CODE\" TEXT," + // 2: shgCode
                "\"SHG_MEMBER_CODE\" TEXT," + // 3: shgMemberCode
                "\"AADHAR_NUMBER\" TEXT," + // 4: aadharNumber
                "\"AADHAR_NAME\" TEXT," + // 5: aadharName
                "\"AADHAR_YOB\" TEXT," + // 6: aadharYOB
                "\"AADHAR_GENDER\" TEXT," + // 7: aadharGender
                "\"AADHAR_ADDRESS\" TEXT," + // 8: aadharAddress
                "\"POSTAL_CODE\" TEXT," + // 9: postalCode
                "\"AADHAR_SYNC_STATUS\" TEXT," + // 10: aadharSyncStatus
                "\"AADHAR_FATHER_NAME\" TEXT," + // 11: aadharFatherName
                "\"AADHAAR_MOBILE_NUMBER\" TEXT," + // 12: aadhaarMobileNumber
                "\"LAT_LONG\" TEXT," + // 13: latLong
                "\"SCAN_STATUS\" TEXT," + // 14: scanStatus
                "\"AADHAAR_IMAGE\" BLOB," + // 15: aadhaarImage
                "\"CONCENT_FORM\" BLOB);"); // 16: concentForm
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"AADHAR_DETAIL_SYNC_DATA\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, AadharDetailSyncData entity) {
        stmt.clearBindings();
 
        Long autoIncrement = entity.getAutoIncrement();
        if (autoIncrement != null) {
            stmt.bindLong(1, autoIncrement);
        }
 
        String villageCode = entity.getVillageCode();
        if (villageCode != null) {
            stmt.bindString(2, villageCode);
        }
 
        String shgCode = entity.getShgCode();
        if (shgCode != null) {
            stmt.bindString(3, shgCode);
        }
 
        String shgMemberCode = entity.getShgMemberCode();
        if (shgMemberCode != null) {
            stmt.bindString(4, shgMemberCode);
        }
 
        String aadharNumber = entity.getAadharNumber();
        if (aadharNumber != null) {
            stmt.bindString(5, aadharNumber);
        }
 
        String aadharName = entity.getAadharName();
        if (aadharName != null) {
            stmt.bindString(6, aadharName);
        }
 
        String aadharYOB = entity.getAadharYOB();
        if (aadharYOB != null) {
            stmt.bindString(7, aadharYOB);
        }
 
        String aadharGender = entity.getAadharGender();
        if (aadharGender != null) {
            stmt.bindString(8, aadharGender);
        }
 
        String aadharAddress = entity.getAadharAddress();
        if (aadharAddress != null) {
            stmt.bindString(9, aadharAddress);
        }
 
        String postalCode = entity.getPostalCode();
        if (postalCode != null) {
            stmt.bindString(10, postalCode);
        }
 
        String aadharSyncStatus = entity.getAadharSyncStatus();
        if (aadharSyncStatus != null) {
            stmt.bindString(11, aadharSyncStatus);
        }
 
        String aadharFatherName = entity.getAadharFatherName();
        if (aadharFatherName != null) {
            stmt.bindString(12, aadharFatherName);
        }
 
        String aadhaarMobileNumber = entity.getAadhaarMobileNumber();
        if (aadhaarMobileNumber != null) {
            stmt.bindString(13, aadhaarMobileNumber);
        }
 
        String latLong = entity.getLatLong();
        if (latLong != null) {
            stmt.bindString(14, latLong);
        }
 
        String scanStatus = entity.getScanStatus();
        if (scanStatus != null) {
            stmt.bindString(15, scanStatus);
        }
 
        byte[] aadhaarImage = entity.getAadhaarImage();
        if (aadhaarImage != null) {
            stmt.bindBlob(16, aadhaarImage);
        }
 
        byte[] concentForm = entity.getConcentForm();
        if (concentForm != null) {
            stmt.bindBlob(17, concentForm);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, AadharDetailSyncData entity) {
        stmt.clearBindings();
 
        Long autoIncrement = entity.getAutoIncrement();
        if (autoIncrement != null) {
            stmt.bindLong(1, autoIncrement);
        }
 
        String villageCode = entity.getVillageCode();
        if (villageCode != null) {
            stmt.bindString(2, villageCode);
        }
 
        String shgCode = entity.getShgCode();
        if (shgCode != null) {
            stmt.bindString(3, shgCode);
        }
 
        String shgMemberCode = entity.getShgMemberCode();
        if (shgMemberCode != null) {
            stmt.bindString(4, shgMemberCode);
        }
 
        String aadharNumber = entity.getAadharNumber();
        if (aadharNumber != null) {
            stmt.bindString(5, aadharNumber);
        }
 
        String aadharName = entity.getAadharName();
        if (aadharName != null) {
            stmt.bindString(6, aadharName);
        }
 
        String aadharYOB = entity.getAadharYOB();
        if (aadharYOB != null) {
            stmt.bindString(7, aadharYOB);
        }
 
        String aadharGender = entity.getAadharGender();
        if (aadharGender != null) {
            stmt.bindString(8, aadharGender);
        }
 
        String aadharAddress = entity.getAadharAddress();
        if (aadharAddress != null) {
            stmt.bindString(9, aadharAddress);
        }
 
        String postalCode = entity.getPostalCode();
        if (postalCode != null) {
            stmt.bindString(10, postalCode);
        }
 
        String aadharSyncStatus = entity.getAadharSyncStatus();
        if (aadharSyncStatus != null) {
            stmt.bindString(11, aadharSyncStatus);
        }
 
        String aadharFatherName = entity.getAadharFatherName();
        if (aadharFatherName != null) {
            stmt.bindString(12, aadharFatherName);
        }
 
        String aadhaarMobileNumber = entity.getAadhaarMobileNumber();
        if (aadhaarMobileNumber != null) {
            stmt.bindString(13, aadhaarMobileNumber);
        }
 
        String latLong = entity.getLatLong();
        if (latLong != null) {
            stmt.bindString(14, latLong);
        }
 
        String scanStatus = entity.getScanStatus();
        if (scanStatus != null) {
            stmt.bindString(15, scanStatus);
        }
 
        byte[] aadhaarImage = entity.getAadhaarImage();
        if (aadhaarImage != null) {
            stmt.bindBlob(16, aadhaarImage);
        }
 
        byte[] concentForm = entity.getConcentForm();
        if (concentForm != null) {
            stmt.bindBlob(17, concentForm);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public AadharDetailSyncData readEntity(Cursor cursor, int offset) {
        AadharDetailSyncData entity = new AadharDetailSyncData( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // autoIncrement
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // villageCode
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // shgCode
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // shgMemberCode
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // aadharNumber
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // aadharName
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // aadharYOB
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // aadharGender
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // aadharAddress
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // postalCode
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // aadharSyncStatus
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // aadharFatherName
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // aadhaarMobileNumber
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // latLong
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // scanStatus
            cursor.isNull(offset + 15) ? null : cursor.getBlob(offset + 15), // aadhaarImage
            cursor.isNull(offset + 16) ? null : cursor.getBlob(offset + 16) // concentForm
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, AadharDetailSyncData entity, int offset) {
        entity.setAutoIncrement(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setVillageCode(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setShgCode(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setShgMemberCode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setAadharNumber(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setAadharName(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setAadharYOB(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setAadharGender(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setAadharAddress(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setPostalCode(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setAadharSyncStatus(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setAadharFatherName(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setAadhaarMobileNumber(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setLatLong(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setScanStatus(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setAadhaarImage(cursor.isNull(offset + 15) ? null : cursor.getBlob(offset + 15));
        entity.setConcentForm(cursor.isNull(offset + 16) ? null : cursor.getBlob(offset + 16));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(AadharDetailSyncData entity, long rowId) {
        entity.setAutoIncrement(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(AadharDetailSyncData entity) {
        if(entity != null) {
            return entity.getAutoIncrement();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(AadharDetailSyncData entity) {
        return entity.getAutoIncrement() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
